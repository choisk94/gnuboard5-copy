<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE properties SYSTEM "http://java.sun.com/dtd/properties.dtd">
<properties>


	<!-- 메인페이지에 추천 펫시터 SELECT -->
	<entry key="bestRecommend">
   		SELECT ROWNUM, S.*
           FROM(SELECT MEM_NO
                      ,MEM_NAME
                      ,SITTER_TITLE
                      ,FILE_PATH||CHANGE_NAME PATH
                      ,AVGRATING
                  FROM VW_SITTER 
                  JOIN ATTACHMENT AT ON(AT_NO = MEM_NO)
                  WHERE AT_CATEGORY = 'SITTER_PIC'
                  AND FILE_LEVEL =1
                  AND AT.STATUS='Y' 
                  ORDER BY AVGRATING DESC) S
          WHERE ROWNUM BETWEEN 1 AND 5
	</entry>
	
	
	<!-- 메인페이지에 베스트 리뷰 SELECT -->
	<entry key ="bestReview">
	
		SELECT ROWNUM, R.*
			FROM( SELECT MEM_NAME, REV_RATING, REV_CONTENT, FILE_PATH||CHANGE_NAME PATH
			        FROM REVIEW
			        JOIN RESERV USING(RES_NO)
			        JOIN ATTACHMENT ON(AT_NO = REV_NO)
			        JOIN MEMBER USING(MEM_NO)
			        WHERE AT_CATEGORY='REVIEW_PIC'
			        AND REV_STATUS='Y'
			        ORDER BY REV_RATING DESC, REV_DATE DESC)R
			WHERE ROWNUM BETWEEN 1 AND 10

	</entry>
	
	<!-- 검색창으로 검색시 노출되는 펫시터 리스트 총 갯수 조회입니다 -->
	<entry key="searchListCount">
	   SELECT
	     COUNT(*) COUNT
			  FROM (
	              SELECT MEM_NO 
	              FROM VW_SITTER
	              JOIN (SELECT SITTER_NO, COUNT(DATE_PERIOD) DATE_COUNT
	                      FROM (SELECT SITTER_NO, DATE_PERIOD FROM ABLE_DATE WHERE DATE_PERIOD BETWEEN ? AND ?)
	                      GROUP BY SITTER_NO) ON(SITTER_NO=MEM_NO)
	              WHERE ADDITIONS LIKE ?
	              AND ADDITIONS LIKE ?
	              AND ADDITIONS LIKE ?
	              AND ADDITIONS LIKE ?
	              AND ADDITIONS LIKE ?  
		 		  )
	</entry>

	
	<!-- 검색창으로 검색시 노출되는 펫시터 리스트 입니다 -->
	<entry key = "searchSitter">
           SELECT *
             FROM (
                SELECT ROWNUM RNUM, A.*
                     FROM (
                        SELECT MEM_NO
                            ,MEM_NAME
                            ,SITTER_TITLE
                            ,ADDITIONS
                            ,OSMALL
                            ,DSMALL
                            ,AVGRATING
                            ,DATE_COUNT   
                            ,ROUND((GET_DISTANCE(? ,? ,MEM_LATITUDE ,MEM_LONGTITUDE )),1) "DISTANCE"
                            ,FILE_PATH||CHANGE_NAME PATH
                        FROM VW_SITTER
                        JOIN (SELECT SITTER_NO, COUNT(DATE_PERIOD) DATE_COUNT
                                FROM (SELECT SITTER_NO, DATE_PERIOD FROM ABLE_DATE WHERE DATE_PERIOD BETWEEN ? AND ?)
                                GROUP BY SITTER_NO) ON(SITTER_NO=MEM_NO)
                        JOIN ATTACHMENT AT ON(AT_NO = MEM_NO)
                        WHERE ADDITIONS LIKE ?
   		                AND ADDITIONS LIKE ?
                        AND ADDITIONS LIKE ?
                        AND ADDITIONS LIKE ?
                        AND ADDITIONS LIKE ?
                        AND AT_CATEGORY = 'SITTER_PIC'
                        AND FILE_LEVEL =1
                        AND AT.STATUS='Y'        
                        ORDER BY avgrating desc, DATE_COUNT DESC) A
                )
		 WHERE RNUM BETWEEN ? AND ?
	</entry>
	
	
		<!-- (별점순)검색창으로 검색시 노출되는 펫시터 리스트 입니다 -->
	<entry key = "searchSitterStarArray">
           SELECT *
             FROM (
                SELECT ROWNUM RNUM, A.*
                     FROM (
                        SELECT MEM_NO
                            ,MEM_NAME
                            ,SITTER_TITLE
                            ,ADDITIONS
                            ,OSMALL
                            ,DSMALL
                            ,AVGRATING
                            ,DATE_COUNT   
                            ,ROUND((GET_DISTANCE(? ,? ,MEM_LATITUDE ,MEM_LONGTITUDE )),1) "DISTANCE"
                            ,FILE_PATH||CHANGE_NAME PATH
                        FROM VW_SITTER
                        JOIN (SELECT SITTER_NO, COUNT(DATE_PERIOD) DATE_COUNT
                                FROM (SELECT SITTER_NO, DATE_PERIOD FROM ABLE_DATE WHERE DATE_PERIOD BETWEEN ? AND ?)
                                GROUP BY SITTER_NO) ON(SITTER_NO=MEM_NO)
                        JOIN ATTACHMENT AT ON(AT_NO = MEM_NO)
                        WHERE ADDITIONS LIKE ?
   		                AND ADDITIONS LIKE ?
                        AND ADDITIONS LIKE ?
                        AND ADDITIONS LIKE ?
                        AND ADDITIONS LIKE ?
                        AND AT_CATEGORY = 'SITTER_PIC'
                        AND FILE_LEVEL =1
                        AND AT.STATUS='Y'        
                        ORDER BY avgrating desc, date_count desc, distance) A
                )
		 WHERE RNUM BETWEEN ? AND ?
	</entry>
	
		
		<!-- (가격순)검색창으로 검색시 노출되는 펫시터 리스트 입니다 -->
	<entry key = "searchSitterPriceArray">
           SELECT *
             FROM (
                SELECT ROWNUM RNUM, A.*
                     FROM (
                        SELECT MEM_NO
                            ,MEM_NAME
                            ,SITTER_TITLE
                            ,ADDITIONS
                            ,OSMALL
                            ,DSMALL
                            ,AVGRATING
                            ,DATE_COUNT   
                            ,ROUND((GET_DISTANCE(? ,? ,MEM_LATITUDE ,MEM_LONGTITUDE )),1) "DISTANCE"
                            ,FILE_PATH||CHANGE_NAME PATH
                        FROM VW_SITTER
                        JOIN (SELECT SITTER_NO, COUNT(DATE_PERIOD) DATE_COUNT
                                FROM (SELECT SITTER_NO, DATE_PERIOD FROM ABLE_DATE WHERE DATE_PERIOD BETWEEN ? AND ?)
                                GROUP BY SITTER_NO) ON(SITTER_NO=MEM_NO)
                        JOIN ATTACHMENT AT ON(AT_NO = MEM_NO)
                        WHERE ADDITIONS LIKE ?
   		                AND ADDITIONS LIKE ?
                        AND ADDITIONS LIKE ?
                        AND ADDITIONS LIKE ?
                        AND ADDITIONS LIKE ?
                        AND AT_CATEGORY = 'SITTER_PIC'
                        AND FILE_LEVEL =1
                        AND AT.STATUS='Y'        
                        ORDER BY osmall, date_count desc, avgrating desc) A
                )
		 WHERE RNUM BETWEEN ? AND ?
	</entry>
	
		<!-- (거리순)검색창으로 검색시 노출되는 펫시터 리스트 입니다 -->
	<entry key = "searchSitterDistanceArray">
           SELECT *
             FROM (
                SELECT ROWNUM RNUM, A.*
                     FROM (
                        SELECT MEM_NO
                            ,MEM_NAME
                            ,SITTER_TITLE
                            ,ADDITIONS
                            ,OSMALL
                            ,DSMALL
                            ,AVGRATING
                            ,DATE_COUNT   
                            ,ROUND((GET_DISTANCE(? ,? ,MEM_LATITUDE ,MEM_LONGTITUDE )),1) "DISTANCE"
                            ,FILE_PATH||CHANGE_NAME PATH
                        FROM VW_SITTER
                        JOIN (SELECT SITTER_NO, COUNT(DATE_PERIOD) DATE_COUNT
                                FROM (SELECT SITTER_NO, DATE_PERIOD FROM ABLE_DATE WHERE DATE_PERIOD BETWEEN ? AND ?)
                                GROUP BY SITTER_NO) ON(SITTER_NO=MEM_NO)
                        JOIN ATTACHMENT AT ON(AT_NO = MEM_NO)
                        WHERE ADDITIONS LIKE ?
   		                AND ADDITIONS LIKE ?
                        AND ADDITIONS LIKE ?
                        AND ADDITIONS LIKE ?
                        AND ADDITIONS LIKE ?
                        AND AT_CATEGORY = 'SITTER_PIC'
                        AND FILE_LEVEL =1
                        AND AT.STATUS='Y'        
                        ORDER BY distance, date_count desc, avgrating desc) A
                )
		 WHERE RNUM BETWEEN ? AND ?
	</entry>
	
	<!-- (이용가능일순)검색창으로 검색시 노출되는 펫시터 리스트 입니다 -->
	<entry key = "searchSitterDateArray">
           SELECT *
             FROM (
                SELECT ROWNUM RNUM, A.*
                     FROM (
                        SELECT MEM_NO
                            ,MEM_NAME
                            ,SITTER_TITLE
                            ,ADDITIONS
                            ,OSMALL
                            ,DSMALL
                            ,AVGRATING
                            ,DATE_COUNT   
                            ,ROUND((GET_DISTANCE(? ,? ,MEM_LATITUDE ,MEM_LONGTITUDE )),1) "DISTANCE"
                            ,FILE_PATH||CHANGE_NAME PATH
                        FROM VW_SITTER
                        JOIN (SELECT SITTER_NO, COUNT(DATE_PERIOD) DATE_COUNT
                                FROM (SELECT SITTER_NO, DATE_PERIOD FROM ABLE_DATE WHERE DATE_PERIOD BETWEEN ? AND ?)
                                GROUP BY SITTER_NO) ON(SITTER_NO=MEM_NO)
                        JOIN ATTACHMENT AT ON(AT_NO = MEM_NO)
                        WHERE ADDITIONS LIKE ?
   		                AND ADDITIONS LIKE ?
                        AND ADDITIONS LIKE ?
                        AND ADDITIONS LIKE ?
                        AND ADDITIONS LIKE ?
                        AND AT_CATEGORY = 'SITTER_PIC'
                        AND FILE_LEVEL =1
                        AND AT.STATUS='Y'        
                        ORDER BY DATE_COUNT DESC, avgrating desc) A
                )
		 WHERE RNUM BETWEEN ? AND ?
	</entry>
	
	
	<!-- 검색한 특정 펫시터의 정보 -->
	<entry key= "searchSitterDetail">
		SELECT MEM_NO
			,MEM_NAME
			,MEM_ADDRESS
			,LICENSE
			,SITTER_TITLE
			,SITTER_CONTENT
			,ADDITIONS
			,PET_PERIOD
			,EXPERIENCE
			,DSMALL
			,DMID
			,DBIG
			,OSMALL
			,OMID
			,OBIG
			,AVGRATING
			,SITTER_CHECKIN
			,SITTER_CHECKOUT
			,ABLE_DATE
			,FILE_LIST
			,(SELECT COUNT(*) FAVOR FROM FAVORITE WHERE MEM_NO=? AND SITTER_NO=?) FAVOR
			FROM VW_SITTER
			JOIN vw_opendate ON(MEM_NO = SITTER_NO)
			join(
		        SELECT AT_NO, LISTAGG(FILE_PATH||CHANGE_NAME,',') WITHIN GROUP(ORDER BY FILE_LEVEL) AS FILE_LIST
		        FROM ATTACHMENT
		        GROUP BY AT_NO, AT_CATEGORY, STATUS
		        HAVING AT_CATEGORY='SITTER_PIC' AND STATUS='Y') on (AT_NO = SITTER_NO)
		    where mem_no=?
	</entry>
	
	<!-- 상세검색한 유저와 펫의 정보 -->
	<entry key ="memPetInfo">
		SELECT mem_no, PET_NO, pet_name, pet_size, pet_gender, pet_birth, SITTER_NO FAVORITE
		FROM pet
		FULL JOIN (SELECT MEM_NO, SITTER_NO FROM FAVORITE WHERE SITTER_NO=?) USING(MEM_NO)
		where pet_status='Y'
		AND MEM_NO=?
	
	</entry>
	
	
	<entry key = "reviewList">
	select mem_no, sitter_no, mem_name, REV_RATING, rev_content, REV_DATE, file_path||change_name path, rev_co_content
		from review
		join reserv using(res_no)
		join reserv_sitting using(res_no)
		join member using(mem_no)
		join attachment on(at_no = rev_no)
		join fee using(sitting_no)
        WHERE REV_STATUS='Y'
		where sitter_no= ?	
	</entry>
	

  </properties>
  